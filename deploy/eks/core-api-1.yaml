---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lh-server
  namespace: default
  labels:
    app: lh-server
    io.littlehorse/active: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lh-server
  template:
    metadata:
      labels:
        app: lh-server
        littlehorse.io/active: "true"
    spec:
      serviceAccountName: lh-server
      containers:
      - name: lh-server
        image: 834373697194.dkr.ecr.us-east-2.amazonaws.com/littlehorse:latest
        imagePullPolicy: Always
        env:
        - name: LHORSE_KAFKA_BOOTSTRAP
          value: "lh-kafka-kafka-bootstrap.kafka:9092"
        - name: "LHORSE_KAFKA_GROUP_ID"
          value: "server"
        - name: "LHORSE_KAFKA_GROUP_IID"
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: "LHORSE_KAFKA_STREAMS_STATE_DIR"
          value: "/kafkaStateStores"
        - name: LHORSE_ADVERTISED_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: LHORSE_ADVERTISED_PORT
          value: "5000"
        - name: "LHORSE_ADVERTISED_PROTO"
          value: "http"
        - name: "LHORSE_CLUSTER_PARTITIONS"
          value: "72"
        - name: "LHORSE_TASK_PARTITIONS"
          value: "12"
        - name: "LHORSE_REPLICATION_FACTOR"
          value: "3"
        - name: "LHORSE_NUM_STREAM_THREADS"
          value: "8"
        - name: "LHORSE_NUM_STANDBY_REPLICAS"
          value: "2"
        - name: "LHORSE_COMMIT_INTERVAL"
          value: "50"
        - name: "LHORSE_API_HOST"
          value: "localhost"
        - name: "LHORSE_API_PORT"
          value: "5000"
        ports:
        - containerPort: 5000
        args: ['server']
        volumeMounts:
        - name: kafka-state-stores-server
          mountPath: /kafkaStateStores
  volumeClaimTemplates:
  - metadata:
      name: kafka-state-stores-server
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "lh-kafka-streams"
      resources:
        requests:
          stogare: 50Gi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lh-scheduler
  namespace: default
  labels:
    app: lh-scheduler
    io.littlehorse/active: "true"
spec:
  serviceName: lh-scheduler
  replicas: 6
  selector:
    matchLabels:
      app: lh-scheduler
  template:
    metadata:
      labels:
        app: lh-scheduler
        littlehorse.io/active: "true"
    spec:
      serviceAccountName: lh-server
      containers:
      - name: lh-scheduler
        resources:
          limits:
            cpu: "8"
          requests:
            cpu: "8"
        image: 834373697194.dkr.ecr.us-east-2.amazonaws.com/lh-scheduler:latest
        imagePullPolicy: Always
        env:
        - name: LHORSE_KAFKA_BOOTSTRAP
          value: "lh-kafka-kafka-bootstrap.kafka:9092"
        - name: "LHORSE_KAFKA_GROUP_ID"
          value: "server"
        - name: "LHORSE_KAFKA_GROUP_IID"
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: "LHORSE_KAFKA_STREAMS_STATE_DIR"
          value: "/kafkaStateStores"
        - name: LHORSE_ADVERTISED_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: LHORSE_ADVERTISED_PORT
          value: "5000"
        - name: "LHORSE_ADVERTISED_PROTO"
          value: "http"
        - name: "LHORSE_CLUSTER_PARTITIONS"
          value: "72"
        - name: "LHORSE_TASK_PARTITIONS"
          value: "12"
        - name: "LHORSE_REPLICATION_FACTOR"
          value: "3"
        - name: "LHORSE_NUM_STREAM_THREADS"
          value: "8"
        - name: "LHORSE_NUM_STANDBY_REPLICAS"
          value: "2"
        - name: "LHORSE_COMMIT_INTERVAL"
          value: "50"
        - name: "LHORSE_API_HOST"
          value: "lh-server.default"
        - name: "LHORSE_API_PORT"
          value: "5000"
        ports:
        - containerPort: 5000
        args: ['scheduler']
        volumeMounts:
        - name: kafka-state-stores-scheduler
          mountPath: /kafkaStateStores
  volumeClaimTemplates:
  - metadata:
      name: kafka-state-stores-scheduler
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "lh-kafka-streams"
      resources:
        requests:
          stogare: 50Gi
