apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: lh-kafka
  namespace: kafka
spec:
  kafka:
    version: 3.2.0
    replicas: 3
    template:
      pod:
        topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: kafka
              strimzi.io/cluster: lh-kafka
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: "3.2"
    rack:
      topologyKey: topology.kubernetes.io/zone
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 5Gi
        deleteClaim: true
  # ZooKeeper is required when validating the CR spec. However it's ignored by the controller
  # when UseKRaft is set.
  zookeeper: 
    template:
      pod:
        topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: zookeeper
              strimzi.io/cluster: lh-kafka
    replicas: 3
    storage:
      type: persistent-claim
      size: 5Gi
      deleteClaim: true
  cruiseControl: {}
  # entityOperator:
  #   topicOperator: {}
  #   userOperator: {}
---
