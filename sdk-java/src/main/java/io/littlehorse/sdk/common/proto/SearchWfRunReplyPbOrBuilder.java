// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package io.littlehorse.jlib.common.proto;

public interface SearchWfRunReplyPbOrBuilder extends
    // @@protoc_insertion_point(interface_extends:littlehorse.SearchWfRunReplyPb)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.littlehorse.LHResponseCodePb code = 1;</code>
   * @return The enum numeric value on the wire for code.
   */
  int getCodeValue();
  /**
   * <code>.littlehorse.LHResponseCodePb code = 1;</code>
   * @return The code.
   */
  io.littlehorse.jlib.common.proto.LHResponseCodePb getCode();

  /**
   * <code>optional string message = 2;</code>
   * @return Whether the message field is set.
   */
  boolean hasMessage();
  /**
   * <code>optional string message = 2;</code>
   * @return The message.
   */
  java.lang.String getMessage();
  /**
   * <code>optional string message = 2;</code>
   * @return The bytes for message.
   */
  com.google.protobuf.ByteString
      getMessageBytes();

  /**
   * <code>repeated .littlehorse.WfRunIdPb results = 3;</code>
   */
  java.util.List<io.littlehorse.jlib.common.proto.WfRunIdPb> 
      getResultsList();
  /**
   * <code>repeated .littlehorse.WfRunIdPb results = 3;</code>
   */
  io.littlehorse.jlib.common.proto.WfRunIdPb getResults(int index);
  /**
   * <code>repeated .littlehorse.WfRunIdPb results = 3;</code>
   */
  int getResultsCount();
  /**
   * <code>repeated .littlehorse.WfRunIdPb results = 3;</code>
   */
  java.util.List<? extends io.littlehorse.jlib.common.proto.WfRunIdPbOrBuilder> 
      getResultsOrBuilderList();
  /**
   * <code>repeated .littlehorse.WfRunIdPb results = 3;</code>
   */
  io.littlehorse.jlib.common.proto.WfRunIdPbOrBuilder getResultsOrBuilder(
      int index);

  /**
   * <pre>
   * The bookmark is used internally by the backend implementation to enable
   * pagination. If you wish to do a multi-part paginated request, you should
   * pass in the bookmark (unaltered) to the next request.
   * </pre>
   *
   * <code>optional bytes bookmark = 4;</code>
   * @return Whether the bookmark field is set.
   */
  boolean hasBookmark();
  /**
   * <pre>
   * The bookmark is used internally by the backend implementation to enable
   * pagination. If you wish to do a multi-part paginated request, you should
   * pass in the bookmark (unaltered) to the next request.
   * </pre>
   *
   * <code>optional bytes bookmark = 4;</code>
   * @return The bookmark.
   */
  com.google.protobuf.ByteString getBookmark();
}
