syntax = "proto3";
package lh_proto;

import "google/protobuf/timestamp.proto";
import "lh_proto.proto";

option go_package = ".;model";
option java_multiple_files = true;
option java_package = "io.littlehorse.common.proto";

// This section contains models used by the Server for observability
message WfRunPb {
    // Yeah ok it's similar to WfRunStatePb but hear me out
    string id = 1;
    string wf_spec_id = 2;
    string wf_spec_name = 3;
    LHStatusPb status = 4;

    int64 last_update_offset = 5;

    google.protobuf.Timestamp start_time = 6;
    optional google.protobuf.Timestamp end_time = 7;
    repeated ThreadRunPb thread_runs = 8;
}

message ThreadRunPb {
    string wf_run_id = 1;
    int32 number = 2;

    LHStatusPb status = 3;
    string wf_spec_id = 4;
    string thread_spec_name = 5;
    int32 num_steps = 6;

    google.protobuf.Timestamp start_time = 7;
    optional google.protobuf.Timestamp end_time = 8;
}

message TaskRunPb {
    string wf_run_id = 1;
    int32 thread_run_number = 2;
    int32 position = 3;

    int32 number = 4;
    int32 attempt_number = 5;
    LHStatusPb status = 6;
    optional bytes output = 7;
    optional bytes log_output = 8;

    google.protobuf.Timestamp schedule_time = 9;
    optional google.protobuf.Timestamp start_time = 10;
    optional google.protobuf.Timestamp end_time = 11;

    string wf_spec_id = 12;
    string thread_spec_name = 13;
    string node_name = 14;
    string task_def_id = 15;
}


// This section defines some common Util responses used by the server.

enum ErrorCodePb {
    VALIDATION_ERROR = 0;
    CONNECTION_ERROR = 1;
    NOT_FOUND_ERROR = 2;
    BAD_REQUEST_ERROR = 3;
}

message ErrorResponsePb {
    ErrorCodePb code = 1;
    string message = 2;
}

// This section describes internal messages used by the server

enum RequestTypePb {
    POST = 0;
    DELETE = 1;
}

message POSTableRequestPb {
    RequestTypePb type = 1;
    string store_key = 2;
    string request_id = 3;
    optional bytes payload = 4;
}

message POSTableResponsePb {
    int32 status = 1;
    optional ErrorCodePb code = 2;
    optional string message = 3;
    optional string id = 4;
    optional bytes payload = 5;
    optional string payload_class = 6;
}

// NOTE: Maybe later we'll add an Entity output thing that lets the
// world know what was just created, but that's for later.


// This section defines internal data structures used for data stores.
message IndexEntryPb {
    string partition_key = 1;
    string store_key = 2;
}

message GETableEntryPb {
    bytes entry = 1;
    int32 partition = 2;
    int64 last_updated_offset = 3;
    repeated IndexEntryPb index_entries = 4;
}
