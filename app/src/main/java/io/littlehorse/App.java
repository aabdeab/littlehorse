/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.littlehorse;

import java.util.ArrayList;
import org.apache.kafka.clients.admin.NewTopic;
import io.littlehorse.common.LHConfig;
import io.littlehorse.common.LHConstants;
import io.littlehorse.scheduler.Scheduler;
import io.littlehorse.worker.TestWorker;

public class App {
    public static void doIdempotentSetup(LHConfig config) {
        System.out.println("Creating topics!!");

        ArrayList<NewTopic> topics = new ArrayList<>();
        for (int i = 1; i < 11; i++) {
            topics.add(new NewTopic(
                "task" + i, config.getTaskPartitions(), config.getReplicationFactor()
            ));
        }

        topics.add(new NewTopic(
            LHConstants.WF_RUN_ENTITY_TOPIC,
            config.getClusterPartitions(),
            config.getReplicationFactor())
        );

        topics.add(new NewTopic(
            LHConstants.WF_RUN_EVENT_TOPIC,
            config.getClusterPartitions(),
            config.getReplicationFactor())
        );

        for (NewTopic topic: topics) {
            config.createKafkaTopic(topic);
        }
        System.out.println("Done creating topics");

    }
    public static void main(String[] args) {

        if (args.length == 0) {
            System.out.println("Nothing to do.");

        } else {
            String arg = args[0];
            LHConfig config = new LHConfig();
            doIdempotentSetup(config);

            if (arg.equals("worker")) {
                TestWorker.doMain(config);
            } else if (arg.equals("scheduler")) {
                Scheduler.doMain(config);
            }
        }
    }
}
