// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package io.littlehorse.common.proto;

public interface SearchWfRunReplyPbOrBuilder extends
    // @@protoc_insertion_point(interface_extends:lh_proto.SearchWfRunReplyPb)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.lh_proto.LHResponseCodePb code = 1;</code>
   * @return The enum numeric value on the wire for code.
   */
  int getCodeValue();
  /**
   * <code>.lh_proto.LHResponseCodePb code = 1;</code>
   * @return The code.
   */
  io.littlehorse.common.proto.LHResponseCodePb getCode();

  /**
   * <code>string message = 2;</code>
   * @return Whether the message field is set.
   */
  boolean hasMessage();
  /**
   * <code>string message = 2;</code>
   * @return The message.
   */
  java.lang.String getMessage();
  /**
   * <code>string message = 2;</code>
   * @return The bytes for message.
   */
  com.google.protobuf.ByteString
      getMessageBytes();

  /**
   * <code>repeated string wf_run_ids = 3;</code>
   * @return A list containing the wfRunIds.
   */
  java.util.List<java.lang.String>
      getWfRunIdsList();
  /**
   * <code>repeated string wf_run_ids = 3;</code>
   * @return The count of wfRunIds.
   */
  int getWfRunIdsCount();
  /**
   * <code>repeated string wf_run_ids = 3;</code>
   * @param index The index of the element to return.
   * @return The wfRunIds at the given index.
   */
  java.lang.String getWfRunIds(int index);
  /**
   * <code>repeated string wf_run_ids = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the wfRunIds at the given index.
   */
  com.google.protobuf.ByteString
      getWfRunIdsBytes(int index);

  /**
   * <pre>
   * This can optionally be set by whatever backend data store implementation
   * is plugged in. Currently, the only backend implementation is the Kafka
   * Streams backend. In this case, the bytes are a `BookmarkPb`.
   * The client doesn't care what the bytes represent; they just need to provide
   * the raw bytes back on the next request and the backend will take care of it
   * transparently.
   * If the bookmark is null, then it means all results have been returned.
   * </pre>
   *
   * <code>bytes bookmark = 4;</code>
   * @return Whether the bookmark field is set.
   */
  boolean hasBookmark();
  /**
   * <pre>
   * This can optionally be set by whatever backend data store implementation
   * is plugged in. Currently, the only backend implementation is the Kafka
   * Streams backend. In this case, the bytes are a `BookmarkPb`.
   * The client doesn't care what the bytes represent; they just need to provide
   * the raw bytes back on the next request and the backend will take care of it
   * transparently.
   * If the bookmark is null, then it means all results have been returned.
   * </pre>
   *
   * <code>bytes bookmark = 4;</code>
   * @return The bookmark.
   */
  com.google.protobuf.ByteString getBookmark();
}
