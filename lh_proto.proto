syntax = "proto3";
package lh_proto;

import "google/protobuf/timestamp.proto";

option go_package = ".;model";
option java_multiple_files = true;
option java_package = "io.littlehorse.common.proto";

enum LHStatusPb {
    STARTING = 0;
    RUNNING = 1;
    COMPLETED = 2;
    HALTING = 3;
    HALTED = 4;
    ERROR = 5;
}

// This section contains data used internally by scheduler.

message NodeRunStatePb {
    string node_name = 1;
    int32 attempt_number = 2;
    int32 position = 3;
    int32 number = 4;
    LHStatusPb status = 5;
}

message ThreadRunStatePb {
    string thread_spec_name = 1;
    LHStatusPb status = 2;
    optional NodeRunStatePb current_node_run = 3;
}

message WFRunPb {
    string id = 1;
    string wf_spec_id = 2;
    LHStatusPb status = 6;
    repeated ThreadRunStatePb thread_runs = 7;
    google.protobuf.Timestamp start_time = 8;
    optional google.protobuf.Timestamp end_time = 9;
}

// This section contains Input Events to the Scheduler.
message WFRunRequestPb {
    string wf_run_id = 1;
    string wf_spec_id = 2;
}

message TaskScheduleRequestPb {
    string task_def_id = 1;
    string task_def_name = 2;
    int32 thread_run_number = 4;
    int32 task_run_number = 5;
    int32 task_run_position = 6;
    string wf_run_id = 7;
    string reply_kafka_topic = 8;
    string wf_spec_id = 9;
}

message TaskStartedEventPb {
    int32 thread_run_number = 1;
    int32 task_run_number = 2;
    int32 task_run_position = 3;
    google.protobuf.Timestamp time = 4;
}

message TaskCompletedEventPb {
    int32 thread_run_number = 1;
    int32 task_run_number = 2;
    int32 task_run_position = 3;
    google.protobuf.Timestamp time = 4;

    bool success = 5;
    optional bytes output = 6;
    optional bytes log_output = 7;
}

message WFRunEventPb {
    string wf_run_id = 1;
    string wf_spec_id = 2;
    google.protobuf.Timestamp time = 3;
    oneof event {
        WFRunRequestPb run_request = 4;
        TaskStartedEventPb started_event = 5;
        TaskCompletedEventPb completed_event = 6;
    }
}

// The below relates to WFSpec.

message EdgePb {
    string source_node_name = 1;
    string sink_node_name = 2;
}

enum NodeTypePb {
    TASK = 0;
    ENTRYPOINT = 1;
    EXIT = 2;
}

message NodePb {
    string task_def_name = 1;
    NodeTypePb type = 2;
}

message ThreadSpecPb {
    repeated EdgePb edges = 1;
    map<string, NodePb> nodes = 2;
}

message WFSpecPb {
    string id = 1;
    google.protobuf.Timestamp created_at = 2;
    google.protobuf.Timestamp updated_at = 3;

    map<string, ThreadSpecPb> thread_specs = 4;
    string entrypoint_thread_name = 5;

    LHStatusPb status = 6;
    string name = 7;
}

// This section contains observability events produced by the Scheduler.

message RunStartOePb {
    string wf_spec_id = 1;
}

message ThreadStartOePb {
    int32 number = 1;
    string thread_spec_name = 2;
}

message TaskScheduledOePb {
    string task_def_id = 1;
    int32 thread_run_number = 2;
    int32 task_run_number = 3;
    int32 task_run_position = 4;
    int32 task_run_attempt_number = 5;
    string wf_run_id = 6;
}

message TaskStartOePb {
    int32 thread_run_number = 1;
    int32 task_run_number = 2;
    int32 task_run_position = 3;
}

message TaskCompleteOePb {
    int32 thread_run_number = 1;
    int32 task_run_number = 2;
    int32 task_run_position = 3;

    bool success = 4;
    optional bytes output = 5;
    optional bytes log_output = 6;
}

message ThreadStatusChangeOePb {
    int32 thread_run_number = 1;
    LHStatusPb status = 2;
}

message WfRunStatusChangeOePb {
    LHStatusPb status = 1;
}

message ObservabilityEventPb {
    google.protobuf.Timestamp time = 1;
    oneof event {
        WfRunStatusChangeOePb wf_run_status = 2;
        RunStartOePb run_start = 3;
        ThreadStartOePb thread_start = 4;
        TaskScheduledOePb task_schedule = 5;
        TaskStartOePb task_start = 6;
        TaskCompletedEventPb task_complete = 7;
        ThreadStatusChangeOePb thread_status = 8;
    }
}

message ObservabilityEventsPb {
    string wf_run_id = 1;
    repeated ObservabilityEventPb events = 2;
}